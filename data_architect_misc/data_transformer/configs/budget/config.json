[
  {
    "__comment__": "(Required) Input folder and file name or file name pattern such as 'SWI_N_ALL_INV*.xlsx' (to process multiple files using the same configuration).",
    "input_folder_path": "./input/budget/",
    "input_file_name_or_pattern": "Global Budget Roll-up_9.16.19.xlsx",

    "__comment__": "(Optional) Enter sheet name to process. Default is the first sheet in the Excel file.",
    "sheet_name_of_excel_file": "Budget Roll-Up",

    "__comment__": "(Optional) Decide if pandas should interpret 'NA', 'N/A', 'NULL', etc. to NaN value. Default is false",
    "interpret_na_null_etc_from_raw_data": false,

    "__comment__": "(Required) Output folder path is required.",
    "output_folder_path": "./output/budget/",

    "__comment__": "(Optional) Prefix for the output file name.",
    "output_file_name_prefix": "transformed_budget_",

    "__comment__": "(Optional) Path+name of that has **CUSTOM** functions for data transformation, which will be imported and used in the transform process.",
    "custom_transform_functions_file": "./transform_functions/budget_transform_functions.py",

    "__comment__": "(Optional) Enter the row index (>= 0) to extract column headers from.",
    "__comment__": "If this value is not provided, program will assume there is no header row in the input file",
    "row_index_to_extract_column_headers": 0,

    "__comment__": "(Optional) Specify which row index (starting from 0) the data begins.",
    "__comment__": "Usually the data begins at row index=1 (row index=0 is for column headers), so we make the default as '1' below.",
    "row_index_where_data_starts": 1,

    "__comment__": "(Optional) Specify how many rows we should ignore at the bottom of the data file.",
    "num_of_rows_to_skip_from_the_bottom": 0,

    "__comment__": "(Required) List of the functions and their parameters.",
    "__comment__": "These functions must be defined either in transform_functions.py or individual task's transform file such as .\\transform_function\\switzerland_transform_functions.py",
    "functions_to_apply": [
      {
        "__function_comment__": "Budget roll up Excel file has empty columns. We need to drop them first",
        "function_name": "drop_unnamed_columns"
      },
      {
        "__function_comment__": "By the time we run this function, there should be only 13 columns total remaining in the raw data frame.",
        "function_name": "assert_number_of_columns_equals",
        "function_args": [13]
      },
      {
        "__function_comment__": "After all this, make sure we don't have any NULL values in Region, Hub, Market, Year, Category, Segment Macro, Brand, Macro Channel and Channel columns ",
        "function_name": "assert_no_na_values_in_columns",
        "function_args": [[
          "Region", "Hub", "Market", "Year",
          "Category", "Segment Macro", "Brand", "Macro Channel",
          "Channel"]]
      },
      {
        "__function_comment__": "Before mapping region names, let's capitalize all of region names",
        "function_name": "capitalize_all_letters_of_each_word_in_multiple_columns",
        "function_args": [["Region"]]
      },
      {
        "function_name": "update_str_values_in_column",
        "function_args": [
          "Region",
          {
            "LATAM": "Latin America",
            "EUROPE": "Europe",
            "APAC": "Asia-Pacific",
            "AED": "Africa-Eurasia",
            "NA": "North America"
          }
        ]
      },
      {
        "function_name": "capitalize_first_letter_of_each_word_in_multiple_columns",
        "function_args": [["Channel", "Macro Channel", "Segment Macro", "Market"]]
      },
      {
        "function_name": "update_str_values_in_column",
        "function_args": [
          "Channel",
          {
            "Youtube": "YouTube",
            "Ecommerce": "eCommerce",
            "E-Commerce": "eCommerce",
            "E-commerce": "eCommerce",
            "e-Commerce": "eCommerce",
            "e-commerce": "eCommerce",
            "ecommerce": "eCommerce"
          }
        ]
      },
      {
        "function_name": "update_str_values_in_column",
        "function_args": [
          "Segment Macro",
          {"HC": "HC Product Range", "PC": "PC Product Range"}
        ]
      },
      {
        "function_name": "update_str_values_in_column",
        "function_args": [
          "Market",
          {
            "USH": "US",
            "AA": "US"
          }
        ]
      },
      {
        "function_name": "update_int_values_in_multiple_columns_to_str_values",
        "function_args": [
          ["Year"],
          [
            {"2019": "2019LE"}
          ]
        ]
      },
      {
        "__function_comment__": "Whenever Channel is 'Ecommerce' or 'Amazon', set Macro Channel to 'eCommerce'.",
        "function_name": "update_str_values_in_col2_based_on_col1_values",
        "function_args": ["Channel", "Macro Channel", {"Ecommerce": "eCommerce", "Amazon": "eCommerce"}]
      },
      {
        "__function_comment__": "Whenever Channel is 'Facebook' or 'Other Social', set Macro Channel to 'Social'.",
        "function_name": "update_str_values_in_col2_based_on_col1_values",
        "function_args": ["Channel", "Macro Channel", {"Facebook": "Social", "Other Social": "Social"}]
      },
      {
        "__function_comment__": "Whenever Market is 'AA', 'Canada', 'US', 'USH', set Region to to 'North America'.",
        "function_name": "update_str_values_in_col2_based_on_col1_values",
        "function_args": ["Market", "Region",
          {"AA": "North America", "Canada": "North America", "US": "North America", "USH": "North America"}]
      },
      {
        "__function_comment__": "Whenever Category is 'pet', update Region to 'Hills'",
        "function_name": "update_str_values_in_col2_based_on_col1_values",
        "function_args": ["Category", "Region", {"pet": "Hills", "Pet": "Hills"}]
      },
      {
        "__function_comment__": "Whenever Segment Macro is 'pet food', update Region to 'Hills'",
        "function_name": "update_str_values_in_col2_based_on_col1_values",
        "function_args": ["Segment Macro", "Region", {"pet": "Hills", "Pet": "Hills"}]
      },
      {
        "__function_comment__": "After capitalizing words and updating values in/across columns, try to detect duplicates, if any.",
        "function_name": "check_possible_duplicates_in_multiple_columns",
        "function_args": [["Region", "Market", "Segment Macro", "Macro Channel", "Channel"]]
      },
      {
        "__function_comment__": "We will create sum of budget rows for each region, year and macro channel pair/combination.",
        "function_name": "add_sum_of_budget_rows_for_each_region_year_and_macro_channel_pair",
        "function_args": [["Region", "Year", "Macro Channel"], "Budget (USD)"]
      },
      {
        "__function_comment__": "Because of the sorting order issue in Tableau, we need to add a space character in front of Region in total/sum Budget rows",
        "function_name": "add_char_in_front_of_region_names_in_total_rows",
        "function_args": [" "]
      },
      {
        "__function_comment__": "In sum of budget rows, we need to copy region values to market for 'Total' lines",
        "function_name": "copy_col1_value_to_col2_if_col2_has_specific_value",
        "function_args": ["Region", "Market", "Total"]
      },
      {
        "__function_comment__": "In sum of budget rows, we need to also capitalize market values if they are the same as region values.",
        "function_name": "capitalize_market_name_if_they_are_the_same_as_region_name"
      }
    ]
  }
]
