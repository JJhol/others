[
  {
    "__comment__": "(Required) Input folder and file name or file name pattern such as 'SWI_N_ALL_INV*.xlsx' (to process multiple files using the same configuration).",
    "input_folder_path": "./input/AED_Morocco/",
    "input_file_name_or_pattern": "Morocco_2019FY_20200330.xlsx",

    "__comment__": "(Optional) Enter sheet name to process from input Excel file. Default is the first sheet.",
    "sheet_name_of_input_excel_file": "MOROCCO",

    "__comment__": "(Optional) Enter sheet name for the output Excel file. Default is 'Sheet1'.",
    "sheet_name_of_output_excel_file": "Sheet1",

    "__comment__": "(Optional) Boolean flag telling if we should write data to a destination place. Default is always True.",
    "write_output": true,

    "__comment__": "(Optional) Relative path (from folder in which transform.py resides) and file name of DataWriter class that has write_data method implemented.",
    "__comment__": "Default is DataWriter class (implemented in 'csv_data_writer.py') which writes transformed data to local file in CSV format.",
    "__comment__": "This option is only for those who wants to write data to somewhere other than to a local file in CSV format.",
    "__comment__": "TODO: later change this to csv_data_writer",
    "data_writer_class_file": "./excel_data_writer.py",

    "__comment__": "(Optional) Relative path of output folder if the data is going to be written to a file. Default is going to be the current working directory of transform.py",
    "__comment__": "Default is going to be the current working directory of transform.py",
    "output_folder_path": "./output/AED_Morocco/",

    "__comment__": "(Optional) Prefix for the output file name.",
    "output_file_name_prefix": "transformed_Morocco_2019FY_",

    "__comment__": "(Optional) Enter the row index (>= 0) to extract column headers from. Default is 0 (the first row).",
    "__comment__": "If this value is NOT provided, program will assume there is no header row in the input file",
    "row_index_to_extract_column_headers": 0,

    "__comment__": "(Optional) Specify which row index (starting from 0) the data begins. Default is 1 (the second row) because that's where the data usually begins in files.",
    "row_index_where_data_starts": 1,

    "__comment__": "(Optional) Specify how many rows we should ignore at the bottom of the data file. Default is 0.",
    "num_of_rows_to_skip_from_the_bottom": 0,

    "__comment__": "(Required) List of the functions and their parameters.",
    "__comment__": "These functions must be defined either in transform_functions.py or individual task's transform file such as ./transform_function/aed_morocco_transform_functions.py",
    "functions_to_apply": [
      {
        "__function_comment__": "Budget roll up Excel file has empty columns. We need to drop them first",
        "function_name": "drop_unnamed_columns"
      },
      {
        "__function_comment__": "By the time we run this function, there should be only 13 columns total remaining in the raw data frame.",
        "function_name": "assert_number_of_columns_equals",
        "function_args": [12]
      },
      {
        "__function_comment__": "Add YEAR column by inferring from YEAR_MONTH column in Morroco raw data file.",
        "function_name": "add_year_column_with_year_value_derived_from_existing_date_column_with_date_values",
        "function_args": ["YEAR_MONTH"]
      },
      {
        "__function_comment__": "Add MONTH column by inferring from YEAR_MONTH column in Morroco raw data file.",
        "function_name": "add_month_column_with_month_value_derived_from_existing_date_column_with_date_values",
        "function_args": ["YEAR_MONTH"]
      },
      {
        "__function_comment__": "Add DATE column by renaming YEAR_MONTH column in Marocco raw data file.",
        "function_name": "rename_columns",
        "function_args": [{"YEAR_MONTH": "DATE"}]
      },
      {
        "__function_comment__": "Add PROCESSED_DATE column representing today's date.",
        "function_name": "add_date_column_with_current_date",
        "function_args": []
      },
      {
        "__function_comment__": "Add HARMONIZED_REGION as a new column with 'Africa-Eurasia' as value.",
        "function_name": "add_new_column_with_fixed_str_value",
        "function_args": ["HARMONIZED_REGION", "Africa-Eurasia"]
      },
      {
        "__function_comment__": "Add HARMONIZED_COUNTRY as a new column with 'Morocco' as value.",
        "function_name": "add_new_column_with_fixed_str_value",
        "function_args": ["HARMONIZED_COUNTRY", "Morocco"]
      },
      {
        "__function_comment__": "Add HARMONIZED_ADVERTISER column that have uppercase-d advertiser names with all global compete advertisers mapped to their standard names.",
        "function_name": "add_new_column_with_values_based_on_another_column_values_using_regex_match",
        "function_args": [
          "ADVERTISER",
          "HARMONIZED_ADVERTISER",
          {
            "(?i)BDF.*": "BEIERSDORF",
            "(?i)BEIERSDORF.*": "BEIERSDORF",
            "(?i)COLGATE.*": "COLGATE-PALMOLIVE",
            "(?i)^CP$": "COLGATE-PALMOLIVE",
            "(?i)GLAXO.*": "GSK",
            "(?i)^GSK": "GSK",
            "(?i)HENKEL.*": "HENKEL",
            "(?i)JOHNSON.*&.*JOHNSON.*": "JOHNSON & JOHNSON",
            "(?i)J.*&.*J.*": "JOHNSON & JOHNSON",
            "(?i)L'?OREAL.*": "LOREAL",
            "(?i)PROCTER.*&.*GAMBLE": "P&G",
            "(?i)P.*&.*G": "P&G",
            "(?i)RECKITT.*": "RECKITT BENCKISER",
            "(?i)^RB$": "RECKITT BENCKISER",
            "(?i).*CLOROX.*": "THE CLOROX COMPANY",
            "(?i).*UNILEVER.*": "UNILEVER"
          }
        ]
      },
      {
        "__function_comment__": "Add HARMONIZED_MEDIA_TYPE column that have standardized category names.",
        "function_name": "add_new_column_with_values_based_on_another_column_values_using_regex_match",
        "function_args": [
          "MEDIA_TYPE",
          "HARMONIZED_MEDIA_TYPE",
          {
            "(?i)CINEMA.*": "Cinema",
            "(?i)MAGAZINE.*": "Print", "(?i)NEWSPAPER.*": "Print", "(?i)PRINT.*": "Print", "(?i)PRESS.*": "Print",
            "(?i)OUTDOOR.*": "OOH", "(?i)OOH.*": "OOH",
            "(?i)RADIO.*": "Radio", "(?i)RD.*": "Radio",
            "(?i)TV": "TV", "(?i)Television.*": "TV",
            "(?i)DIGITAL.*": "Digital", "(?i)INTERNET.*": "Digital", "(?i)ONLINE.*": "Digital"
          }
        ]
      },
      {
        "__function_comment__": "Add CURRENCY as a new column with 'AED' as value.",
        "function_name": "add_new_column_with_fixed_str_value",
        "function_args": ["CURRENCY","MAD"]
      },
      {
        "__function_comment__": "Rename GROSS_SPEND_IN_LOCAL_CURRENCY (DIRHAMS) column to GROSS_SPEND_IN_LOCAL_CURRENCY.",
        "function_name": "rename_columns",
        "function_args": [{"GROSS_SPEND_IN_LOCAL_CURRENCY (DIRHAMS)": "GROSS_SPEND_IN_LOCAL_CURRENCY"}]
      },
      {
        "__function_comment__": "Make sure values in GROSS_SPEND_IN_LOCAL_CURRENCY are two decimal digits.",
        "function_name": "update_decimal_places_in_columns",
        "function_args": [["GROSS_SPEND_IN_LOCAL_CURRENCY"], 2]
      },
      {
        "__function_comment__": "Add HARMONIZED_CATEGORY column that have standardized category names.",
        "function_name": "add_new_column_with_values_based_on_another_column_values_using_regex_match",
        "function_args": [
          "CATEGORY",
          "HARMONIZED_CATEGORY",
          {
            "(?i)^HC$": "Home Care",
            "(?i)HOME.*CARE.*": "Home Care",
            "(?i)^OC$": "Oral Care",
            "(?i)ORAL.*CARE.*": "Oral Care",
            "(?i)^PC$": "Personal Care",
            "(?i).*PERSONAL.*CARE.*": "Personal Care",
            "(?i).*BABY.*CARE.*": "Personal Care",
            "(?i)HAIR.*CARE.*": "Personal Care",
            "(?i)OTHER.*": "Other",
            "(?i)ALL.*OTHER.*": "Other"
          }
        ]
      },
      {
        "__function_comment__": "Rename SUBCATEGORY column to RAW_SUBCATEGORY.",
        "function_name": "rename_columns",
        "function_args": [{"SUBCATEGORY": "RAW_SUBCATEGORY"}]
      },
      {
        "__function_comment__": "Rename BRAND column to RAW_BRAND.",
        "function_name": "rename_columns",
        "function_args": [{"BRAND": "RAW_BRAND"}]
      },
      {
        "__function_comment__": "Rename SUBBRAND (Optional) column to RAW_SUBBRAND.",
        "function_name": "rename_columns",
        "function_args": [{"SUBBRAND (Optional)": "RAW_SUBBRAND"}]
      },
      {
        "__function_comment__": "Rename PRODUCT_NAME column to RAW_PRODUCT_NAME.",
        "function_name": "rename_columns",
        "function_args": [{"PRODUCT_NAME": "RAW_PRODUCT_NAME"}]
      },
      {
        "__function_comment__": "Add HARMONIZED_PRODUCT_NAME as a new column with '' as value.",
        "function_name": "add_new_column_with_fixed_str_value",
        "function_args": ["HARMONIZED_PRODUCT_NAME",""]
      },
      {
        "__function_comment__": "Rearrange the columns to the desired order that we use in Competitive Harmonization.",
        "function_name": "update_order_of_columns_in_dataframe",
        "function_args":
        [
          [
            "YEAR",
            "MONTH",
            "DATE",
            "PROCESSED_DATE",
            "HARMONIZED_REGION",
            "HARMONIZED_COUNTRY",
            "HARMONIZED_ADVERTISER",
            "HARMONIZED_MEDIA_TYPE",
            "CURRENCY",
            "GROSS_SPEND_IN_LOCAL_CURRENCY",
            "HARMONIZED_CATEGORY",
            "RAW_SUBCATEGORY",
            "RAW_BRAND",
            "RAW_SUBBRAND",
            "RAW_PRODUCT_NAME",
            "HARMONIZED_PRODUCT_NAME"
          ]
        ]
      }
    ]
  }
]
