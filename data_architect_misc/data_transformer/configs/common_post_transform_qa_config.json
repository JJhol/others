[
  {
    "__comment__": "This is the common QA functions that we must always run against output files after data transformation.",
    "__comment__": "If any of the QA tests doesn't pass, we must modify the config file of the respective country to update the transformation rules as needed.",
    "__comment__": "Run this QA config from commandline like this >> python transform.py -c configs/common_post_transform_qa_config.json -i output/AED_GCC/transformed_GCC_2019FY__20200407_170849.xlsx",

    "__comment__": "(Optional) Enter sheet name to process from input Excel file. Default is the first sheet.",
    "sheet_name_of_input_excel_file": "Sheet1",

    "__comment__": "(Optional) Enter the row index (>= 0) to extract column headers from. Default is 0 (the first row).",
    "__comment__": "If this value is NOT provided, program will assume there is no header row in the input file",
    "row_index_to_extract_column_headers": 0,

    "__comment__": "(Optional) Specify which row index (starting from 0) the data begins. Default is 1 (the second row) because that's where the data usually begins in files.",
    "row_index_where_data_starts": 1,

    "__comment__": "(Optional) Specify how many rows we should ignore at the bottom of the data file. Default is 0.",
    "num_of_rows_to_skip_from_the_bottom": 0,

    "__comment__": "(Optional) Boolean flag telling if we should write data to a destination place. Default is always True.",
    "write_output": false,

    "__comment__": "(Required) Path+name of the module with **COMMON** QA functions.",
    "custom_transform_functions_file": "./qa_functions/common_post_transform_qa_functions.py",

    "__comment__": "(Required) List of the functions and their parameters.",
    "__comment__": "These functions must be defined either in transform_functions.py or individual task's transform file such as ./transform_function/aed_gcc_transform_functions.py",
    "functions_to_apply": [
      {
        "function_name": "check_expected_columns"
      },
      {
        "function_name": "assert_number_of_columns_equals",
        "function_args": [10]
      }
    ]
  }
]
